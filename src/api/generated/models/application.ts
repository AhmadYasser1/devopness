/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Environment } from './environment';
import { SocialAccount } from './social-account';

/**
 * 
 * @export
 * @interface Application
 */
export interface Application {
    /**
     * The unique id of the given record
     * @type {number}
     * @memberof Application
     */
    id: number;
    /**
     * A domain name that points to application main web address. Can be a naked domain or any subdomain. If app has domain names `testing.my-app.com`, `staging.my-app.com` and `www.my-app.com` a possible good candidate for the application name would be the \"naked\" domain `my-app.com`
     * @type {string}
     * @memberof Application
     */
    name: string;
    /**
     * The sub-domain through which the application deployed with these settings will be accessed
     * @type {string}
     * @memberof Application
     */
    domain_name: string;
    /**
     * 
     * @type {SocialAccount}
     * @memberof Application
     */
    source_provider?: SocialAccount;
    /**
     * The full name of a repository (`repository_owner/repository_name`) containing the application source code. Required when the `source_provider_id` field is informed.
     * @type {string}
     * @memberof Application
     */
    repository?: string;
    /**
     * The name part of a repository full name (`repository_owner/repository_name`)
     * @type {string}
     * @memberof Application
     */
    repository_name?: string;
    /**
     * The owner part of a repository full name (`repository_owner/repository_name`)
     * @type {string}
     * @memberof Application
     */
    repository_owner?: string;
    /**
     * The version control branch that, by default, will be retrieved and deployed. This might be overriden by client apps API calls when actually triggering a new deployment.
     * @type {string}
     * @memberof Application
     */
    default_branch?: string;
    /**
     * Indicates if push to deploy webhooks are enabled for this application/environment, if so code will be deployed when commited to the default_branch
     * @type {boolean}
     * @memberof Application
     */
    push_to_deploy?: boolean;
    /**
     * The predominant programming language used in the application source code
     * @type {string}
     * @memberof Application
     */
    programming_language: string;
    /**
     * The language runtime engine version to be used to execute this application code on the deployed servers
     * @type {string}
     * @memberof Application
     */
    engine_version?: string;
    /**
     * The base framework on top of which the application has been implemented - if any
     * @type {string}
     * @memberof Application
     */
    framework: string;
    /**
     * The physical path of the applicaton code/artifacts on the deployed servers
     * @type {string}
     * @memberof Application
     */
    app_directory?: string;
    /**
     * The relative directory where package manager\'s manifest files (`package.json`, `composer.json`, `yarn.lock`, etc) are located. It needs to be set for applications where the actual source code is not located in the top level directory of the repository.
     * @type {string}
     * @memberof Application
     */
    root_directory?: string;
    /**
     * The relative web directory where publicly accessible assets are located and the web content should be served from
     * @type {string}
     * @memberof Application
     */
    public_directory: string;
    /**
     * The entrypoint tells devopness how an application should be started and has basically two forms:  1) `File`: if it\'s a simple file name/path an web app will be served using the entrypoint value as its index file. Example: `index.html`  2) `Command`: if a command line instruction is provided as the entrypoint value, it will be handled as the start up command that initalizes the application. It will be assumed that the user is an advanced user that knows what she/he is doing, therefore the command specified here will be run - as is - everytime the application needs to be started. 
     * @type {string}
     * @memberof Application
     */
    entrypoint?: string;
    /**
     * Useful, for instance, when deploying `docker` containerized applications. If the application is not initialized by `devopness` itself, the user should inform the address at which the application listens to external calls. The address can be an IP, IP:PORT, HOSTNAME, HOSTNAME:PORT or unix:PATH
     * @type {string}
     * @memberof Application
     */
    listening_address?: string;
    /**
     * The number of deployment history, logs and artifacts to keep stored in both devopness servers and user\'s servers
     * @type {number}
     * @memberof Application
     */
    deployments_keep?: number;
    /**
     * Indicates if at deployment time we should execute package manager command to install dependencies used in development mode
     * @type {boolean}
     * @memberof Application
     */
    install_dependencies_dev?: boolean;
    /**
     * Indicates if at deployment time we should execute package manager command to install dependencies used in production mode
     * @type {boolean}
     * @memberof Application
     */
    install_dependencies_prod?: boolean;
    /**
     * The list of environments to which the application is linked to
     * @type {Array<Environment>}
     * @memberof Application
     */
    environments: Array<Environment>;
    /**
     * Current status of deploying to remote servers the current application
     * @type {string}
     * @memberof Application
     */
    status?: ApplicationStatusEnum;
    /**
     * Numeric ID of the project that the application belongs to
     * @type {number}
     * @memberof Application
     */
    project_id: number;
    /**
     * Numeric ID of the source provider account where the repository is hosted. Required when the `repository` field is informed.
     * @type {number}
     * @memberof Application
     */
    source_provider_id?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum ApplicationStatusEnum {
    Pending = 'pending',
    InProgress = 'in-progress',
    Cancelled = 'cancelled',
    Completed = 'completed',
    Failed = 'failed'
}


