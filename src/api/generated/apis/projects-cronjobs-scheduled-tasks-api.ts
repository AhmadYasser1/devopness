/* eslint-disable */
/**
 * devopness API
 * Devopness API - Painless essential DevOps to everyone 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApiBaseService } from "../../../services/ApiBaseService";
import { ApiResponse } from "../../../common/ApiResponse";
import { ArgumentNullException } from "../../../common/Exceptions";
import { Task } from '../../generated/models';
import { TaskCreate } from '../../generated/models';

/**
 * ProjectsCronjobsScheduledTasksApiService - Auto-generated
 */
export class ProjectsCronjobsScheduledTasksApiService extends ApiBaseService {
    /**
     * 
     * @summary Add a scheduled task to the given project
     * @param {number} projectId The project numeric Id
     * @param {TaskCreate} taskCreate A JSON object containing task data
     */
    public async addCronjobToProject(projectId: number, taskCreate: TaskCreate): Promise<ApiResponse<Task>> {
        if (projectId === null || projectId === undefined) {
            throw new ArgumentNullException('projectId', 'addCronjobToProject');
        }
        if (taskCreate === null || taskCreate === undefined) {
            throw new ArgumentNullException('taskCreate', 'addCronjobToProject');
        }
        const response = await this.post <Task, TaskCreate>(`/projects/{project_id}/tasks`.replace(`{${"project_id"}}`, encodeURIComponent(String(projectId))), taskCreate);
        return new ApiResponse(response);
    }

    /**
     * 
     * @summary Return a list of all tasks belonging to a project
     * @param {number} projectId Numeric ID of the project to get tasks from
     */
    public async listProjectCronjobs(projectId: number): Promise<ApiResponse<Array<Task>>> {
        if (projectId === null || projectId === undefined) {
            throw new ArgumentNullException('projectId', 'listProjectCronjobs');
        }
        const response = await this.get <Array<Task>>(`/projects/{project_id}/tasks`.replace(`{${"project_id"}}`, encodeURIComponent(String(projectId))));
        return new ApiResponse(response);
    }
}
